{
  "inheritance": {
    "environment": [
      "prod",
      "test",
      "dev",
      "local"
    ],
    "__from": [
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\inheritance\\environment.inheritance.json",
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\inheritance\\service.inheritance.json"
    ],
    "service": [
      "leo",
      "npx"
    ]
  },
  "__from": [
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\inheritance\\environment.inheritance.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\inheritance\\service.inheritance.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\displayGit.view.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\domain.cat.view.json",
    "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\domain.view.json"
  ],
  "mereology": {
    "environment": {
      "children": {
        "service": {
          "fields": {
            "protocol": {
              "description": "The protocol that this service will use in this environment"
            },
            "domain": {
              "description": "The domain name for this service in this environment"
            },
            "port": {
              "description": "The port that this service will listen on in this environment"
            }
          }
        },
        "database": {
          "name": {
            "description": "The name of the database in this environment"
          }
        }
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json"
      ]
    },
    "fields": {
      "gittag": {
        "description": "The tag that will be in each service's git repo for the code that is in this environment"
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json"
      ]
    },
    "__from": [
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json"
    ]
  },
  "service": {
    "fields": {
      "summary": {
        "description": "A one line summary of what this service does"
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json"
      ]
    },
    "children": {
      "git": {
        "url": {
          "description": "The git repo for this service"
        }
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json"
      ]
    },
    "__from": [
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\mereology\\main.mereology.json"
    ]
  },
  "reference": {
    "dev:environment": {
      "ngtest:database": {},
      "leo:service": {
        "domain": "dev.leo",
        "port": 80
      },
      "npx:service": {
        "domain": "dev.npx",
        "port": 80
      },
      "gitTag": "dev",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "test:environment": {
      "ngtest:database": {},
      "leo:service": {
        "domain": "test.leo",
        "port": 80
      },
      "npx:service": {
        "domain": "test.npx",
        "port": 80
      },
      "gitTag": "test",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "prod:environment": {
      "ngprod:database": {},
      "leo:service": {
        "domain": "prod.leo",
        "port": 80
      },
      "npx:service": {
        "domain": "prod.npx",
        "port": 80
      },
      "gitTag": "prod",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "ngprod:database": {
      "url": "ngprod.url",
      "type": "oracle",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "ngtest:database": {
      "url": "ngtest.url",
      "type": "oracle",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "leo:service": {
      "git": {
        "url": "leo.git.url"
      },
      "summary": "CRUD for vehicle orders",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "npx:service": {
      "git": {
        "url": "npx.git.url"
      },
      "summary": "Invoice generation",
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
      ]
    },
    "__from": [
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\reference\\reference.json"
    ]
  },
  "situation": {
    "leo:service": {
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json"
      ]
    },
    "npx:service": {
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json"
      ]
    },
    "dev:environment": {
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json"
      ]
    },
    "local:environment": {
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json"
      ]
    },
    "test:environment": {
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json"
      ]
    },
    "__from": [
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\situation\\situation.json"
    ]
  },
  "view": {
    "displayGit": {
      "type": "view",
      "description": "Lists the git properties of the services",
      "usage": [
        "Just add the names of the environments and the services to the situation. For example {'prod', 'uat', 'servicename1', 'servicename2}"
      ],
      "preconditions": [
        "The environments and services need to be in the ontology",
        "The domain and port need to be in the reference data"
      ],
      "fetchers": {
        "gitClone": {
          "condition": {
            "{env:environment}": {
              "git": {
                "gittag": "{tag}"
              }
            },
            "{ser:service}": {
              "git": {
                "url": "{url}",
                "directory": "{dir}"
              }
            }
          },
          "ifTrue": {
            "type": "instrument",
            "name": "echo",
            "params": "*",
            "addTo": "ser"
          }
        }
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\displayGit.view.json"
      ]
    },
    "__from": [
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\displayGit.view.json",
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\domain.cat.view.json",
      "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\domain.view.json"
    ],
    "domainCat": {
      "type": "view",
      "description": "Display a csv file for each dmain in each environment",
      "usage": [
        "Just add the names of the environments and the services to the situation. For example {'prod', 'uat', 'servicename1', 'servicename2}"
      ],
      "preconditions": [
        "The environments and services need to be in the ontology",
        "The domain and port need to be in the reference data"
      ],
      "fetchers": {
        "displayTheStuff": {
          "condition": {
            "{env:environment}": {},
            "{ser:service}": {
              "domain": "{domain}"
            }
          },
          "ifTrue": {
            "type": "instrument",
            "name": "catCsv",
            "params": {
              "file": "{env}.{domain}.csv"
            },
            "addTo": "ser"
          }
        }
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\domain.cat.view.json"
      ]
    },
    "domain": {
      "type": "view",
      "description": "Lists the domain and port of the services",
      "usage": [
        "Just add the names of the environments and the services to the situation. For example {'prod', 'uat', 'servicename1', 'servicename2}"
      ],
      "preconditions": [
        "The environments and services need to be in the ontology",
        "The domain and port need to be in the reference data"
      ],
      "fetchers": {
        "domainAndPort": {
          "condition": {
            "{env:environment}": {},
            "{ser:service}": {
              "domain": "{domain}",
              "port": "{port}"
            }
          },
          "ifTrue": {
            "type": "instrument",
            "name": "echo",
            "params": "*",
            "addTo": "ser"
          }
        }
      },
      "__from": [
        "C:\\git\\runbook\\runbookTestConfig\\.runbook\\config\\views\\debug\\domain.view.json"
      ]
    }
  }
}